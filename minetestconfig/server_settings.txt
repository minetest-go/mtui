[*Server]

#    Name of the player.
#    When running a server, clients connecting with this name are admins.
#    When starting from the main menu, this is overridden.
name (Admin name) string

[**Serverlist and MOTD]

#    Name of the server, to be displayed when players join and in the serverlist.
server_name (Server name) string Minetest server

#    Description of server, to be displayed when players join and in the serverlist.
server_description (Server description) string mine here

#    Domain name of server, to be displayed in the serverlist.
server_address (Server address) string game.minetest.net

#    Homepage of server, to be displayed in the serverlist.
server_url (Server URL) string https://minetest.net

#    Automatically report to the serverlist.
server_announce (Announce server) bool false

#    Announce to this serverlist.
serverlist_url (Serverlist URL) string servers.minetest.net

#    Message of the day displayed to players connecting.
motd (Message of the day) string

#    Maximum number of players that can be connected simultaneously.
max_users (Maximum users) int 15 0 65535

#    If this is set, players will always (re)spawn at the given position.
static_spawnpoint (Static spawnpoint) string

[**Networking]

#    Network port to listen (UDP).
#    This value will be overridden when starting from the main menu.
port (Server port) int 30000 1 65535

#    The network interface that the server listens on.
bind_address (Bind address) string

#    Enable to disallow old clients from connecting.
#    Older clients are compatible in the sense that they will not crash when connecting
#    to new servers, but they may not support all new features that you are expecting.
strict_protocol_version_checking (Strict protocol checking) bool false

#    Specifies URL from which client fetches media instead of using UDP.
#    $filename should be accessible from $remote_media$filename via cURL
#    (obviously, remote_media should end with a slash).
#    Files that are not present will be fetched the usual way.
remote_media (Remote media) string

#    Enable/disable running an IPv6 server.
#    Ignored if bind_address is set.
#    Needs enable_ipv6 to be enabled.
ipv6_server (IPv6 server) bool false

[*Server Security]

#    New users need to input this password.
default_password (Default password) string

#    If enabled, players cannot join without a password or change theirs to an empty password.
disallow_empty_password (Disallow empty passwords) bool false

#    The privileges that new users automatically get.
#    See /privs in game for a full list on your server and mod configuration.
default_privs (Default privileges) string interact, shout

#    Privileges that players with basic_privs can grant
basic_privs (Basic privileges) string interact, shout

#    If enabled, disable cheat prevention in multiplayer.
disable_anticheat (Disable anticheat) bool false

#    If enabled, actions are recorded for rollback.
#    This option is only read when server starts.
enable_rollback_recording (Rollback recording) bool false

[**Client-side Modding]

#    Restricts the access of certain client-side functions on servers.
#    Combine the byteflags below to restrict client-side features, or set to 0
#    for no restrictions:
#    LOAD_CLIENT_MODS: 1 (disable loading client-provided mods)
#    CHAT_MESSAGES: 2 (disable send_chat_message call client-side)
#    READ_ITEMDEFS: 4 (disable get_item_def call client-side)
#    READ_NODEDEFS: 8 (disable get_node_def call client-side)
#    LOOKUP_NODES_LIMIT: 16 (limits get_node call client-side to
#    csm_restriction_noderange)
#    READ_PLAYERINFO: 32 (disable get_player_names call client-side)
csm_restriction_flags (Client side modding restrictions) int 62 0 63

#   If the CSM restriction for node range is enabled, get_node calls are limited
#   to this distance from the player to the node.
csm_restriction_noderange (Client side node lookup range restriction) int 0 0 4294967295

[**Chat]

#    Remove color codes from incoming chat messages
#    Use this to stop players from being able to use color in their messages
strip_color_codes (Strip color codes) bool false

#    Set the maximum length of a chat message (in characters) sent by clients.
chat_message_max_size (Chat message max length) int 500 10 65535

#    Amount of messages a player may send per 10 seconds.
chat_message_limit_per_10sec (Chat message count limit) float 8.0 1.0

#    Kick players who sent more than X messages per 10 seconds.
chat_message_limit_trigger_kick (Chat message kick threshold) int 50 1 65535

[*Server Gameplay]

#    Controls length of day/night cycle.
#    Examples:
#    72 = 20min, 360 = 4min, 1 = 24hour, 0 = day/night/whatever stays unchanged.
time_speed (Time speed) int 72 0

#    Time of day when a new world is started, in millihours (0-23999).
world_start_time (World start time) int 6125 0 23999

#    Time in seconds for item entity (dropped items) to live.
#    Setting it to -1 disables the feature.
item_entity_ttl (Item entity TTL) int 900 -1

#    Specifies the default stack size of nodes, items and tools.
#    Note that mods or games may explicitly set a stack for certain (or all) items.
default_stack_max (Default stack size) int 99 1 65535

[**Physics]

#    Horizontal and vertical acceleration on ground or when climbing,
#    in nodes per second per second.
movement_acceleration_default (Default acceleration) float 3.0 0.0

#    Horizontal acceleration in air when jumping or falling,
#    in nodes per second per second.
movement_acceleration_air (Acceleration in air) float 2.0 0.0

#    Horizontal and vertical acceleration in fast mode,
#    in nodes per second per second.
movement_acceleration_fast (Fast mode acceleration) float 10.0 0.0

#    Walking and flying speed, in nodes per second.
movement_speed_walk (Walking speed) float 4.0 0.0

#    Sneaking speed, in nodes per second.
movement_speed_crouch (Sneaking speed) float 1.35 0.0

#    Walking, flying and climbing speed in fast mode, in nodes per second.
movement_speed_fast (Fast mode speed) float 20.0 0.0

#    Vertical climbing speed, in nodes per second.
movement_speed_climb (Climbing speed) float 3.0 0.0

#    Initial vertical speed when jumping, in nodes per second.
movement_speed_jump (Jumping speed) float 6.5 0.0

#    How much you are slowed down when moving inside a liquid.
#    Decrease this to increase liquid resistance to movement.
movement_liquid_fluidity (Liquid fluidity) float 1.0 0.001

#    Maximum liquid resistance. Controls deceleration when entering liquid at
#    high speed.
movement_liquid_fluidity_smooth (Liquid fluidity smoothing) float 0.5

#    Controls sinking speed in liquid when idling. Negative values will cause
#    you to rise instead.
movement_liquid_sink (Liquid sinking) float 10.0

#    Acceleration of gravity, in nodes per second per second.
movement_gravity (Gravity) float 9.81


[Mapgen]

#    A chosen map seed for a new map, leave empty for random.
#    Will be overridden when creating a new world in the main menu.
fixed_map_seed (Fixed map seed) string

#    Name of map generator to be used when creating a new world.
#    Creating a world in the main menu will override this.
#    Current mapgens in a highly unstable state:
#    -    The optional floatlands of v7 (disabled by default).
mg_name (Mapgen name) enum v7 v7,valleys,carpathian,v5,flat,fractal,singlenode,v6

#    Water surface level of the world.
water_level (Water level) int 1 -31000 31000

#    From how far blocks are generated for clients, stated in mapblocks (16 nodes).
max_block_generate_distance (Max block generate distance) int 10 1 32767

#    Limit of map generation, in nodes, in all 6 directions from (0, 0, 0).
#    Only mapchunks completely within the mapgen limit are generated.
#    Value is stored per-world.
mapgen_limit (Map generation limit) int 31007 0 31007

#    Global map generation attributes.
#    In Mapgen v6 the 'decorations' flag controls all decorations except trees
#    and jungle grass, in all other mapgens this flag controls all decorations.
mg_flags (Mapgen flags) flags caves,dungeons,light,decorations,biomes,ores caves,dungeons,light,decorations,biomes,ores,nocaves,nodungeons,nolight,nodecorations,nobiomes,noores

[*Biome API noise parameters]

#    Temperature variation for biomes.
mg_biome_np_heat (Heat noise) noise_params_2d 50, 50, (1000, 1000, 1000), 5349, 3, 0.5, 2.0, eased

#    Small-scale temperature variation for blending biomes on borders.
mg_biome_np_heat_blend (Heat blend noise) noise_params_2d 0, 1.5, (8, 8, 8), 13, 2, 1.0, 2.0, eased

#    Humidity variation for biomes.
mg_biome_np_humidity (Humidity noise) noise_params_2d 50, 50, (1000, 1000, 1000), 842, 3, 0.5, 2.0, eased

#    Small-scale humidity variation for blending biomes on borders.
mg_biome_np_humidity_blend (Humidity blend noise) noise_params_2d 0, 1.5, (8, 8, 8), 90003, 2, 1.0, 2.0, eased

[*Mapgen V5]

#    Map generation attributes specific to Mapgen v5.
mgv5_spflags (Mapgen V5 specific flags) flags caverns caverns,nocaverns

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
mgv5_cave_width (Cave width) float 0.09

#    Y of upper limit of large caves.
mgv5_large_cave_depth (Large cave depth) int -256 -31000 31000

#    Minimum limit of random number of small caves per mapchunk.
mgv5_small_cave_num_min (Small cave minimum number) int 0 0 256

#    Maximum limit of random number of small caves per mapchunk.
mgv5_small_cave_num_max (Small cave maximum number) int 0 0 256

#    Minimum limit of random number of large caves per mapchunk.
mgv5_large_cave_num_min (Large cave minimum number) int 0 0 64

#    Maximum limit of random number of large caves per mapchunk.
mgv5_large_cave_num_max (Large cave maximum number) int 2 0 64

#    Proportion of large caves that contain liquid.
mgv5_large_cave_flooded (Large cave proportion flooded) float 0.5 0.0 1.0

#    Y-level of cavern upper limit.
mgv5_cavern_limit (Cavern limit) int -256 -31000 31000

#    Y-distance over which caverns expand to full size.
mgv5_cavern_taper (Cavern taper) int 256 0 32767

#    Defines full size of caverns, smaller values create larger caverns.
mgv5_cavern_threshold (Cavern threshold) float 0.7

#    Lower Y limit of dungeons.
mgv5_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgv5_dungeon_ymax (Dungeon maximum Y) int 31000 -31000 31000

[**Noises]

#    Variation of biome filler depth.
mgv5_np_filler_depth (Filler depth noise) noise_params_2d 0, 1, (150, 150, 150), 261, 4, 0.7, 2.0, eased

#    Variation of terrain vertical scale.
#    When noise is < -0.55 terrain is near-flat.
mgv5_np_factor (Factor noise) noise_params_2d 0, 1, (250, 250, 250), 920381, 3, 0.45, 2.0, eased

#    Y-level of average terrain surface.
mgv5_np_height (Height noise) noise_params_2d 0, 10, (250, 250, 250), 84174, 4, 0.5, 2.0, eased

#    First of two 3D noises that together define tunnels.
mgv5_np_cave1 (Cave1 noise) noise_params_3d 0, 12, (61, 61, 61), 52534, 3, 0.5, 2.0

#    Second of two 3D noises that together define tunnels.
mgv5_np_cave2 (Cave2 noise) noise_params_3d 0, 12, (67, 67, 67), 10325, 3, 0.5, 2.0

#    3D noise defining giant caverns.
mgv5_np_cavern (Cavern noise) noise_params_3d 0, 1, (384, 128, 384), 723, 5, 0.63, 2.0

#    3D noise defining terrain.
mgv5_np_ground (Ground noise) noise_params_3d 0, 40, (80, 80, 80), 983240, 4, 0.55, 2.0, eased

#    3D noise that determines number of dungeons per mapchunk.
mgv5_np_dungeons (Dungeon noise) noise_params_3d 0.9, 0.5, (500, 500, 500), 0, 2, 0.8, 2.0

[*Mapgen V6]

#    Map generation attributes specific to Mapgen v6.
#    The 'snowbiomes' flag enables the new 5 biome system.
#    When the 'snowbiomes' flag is enabled jungles are automatically enabled and
#    the 'jungles' flag is ignored.
mgv6_spflags (Mapgen V6 specific flags) flags jungles,biomeblend,mudflow,snowbiomes,noflat,trees jungles,biomeblend,mudflow,snowbiomes,flat,trees,nojungles,nobiomeblend,nomudflow,nosnowbiomes,noflat,notrees

#    Deserts occur when np_biome exceeds this value.
#    When the 'snowbiomes' flag is enabled, this is ignored.
mgv6_freq_desert (Desert noise threshold) float 0.45

#    Sandy beaches occur when np_beach exceeds this value.
mgv6_freq_beach (Beach noise threshold) float 0.15

#    Lower Y limit of dungeons.
mgv6_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgv6_dungeon_ymax (Dungeon maximum Y) int 31000 -31000 31000

[**Noises]

#    Y-level of lower terrain and seabed.
mgv6_np_terrain_base (Terrain base noise) noise_params_2d -4, 20, (250, 250, 250), 82341, 5, 0.6, 2.0, eased

#    Y-level of higher terrain that creates cliffs.
mgv6_np_terrain_higher (Terrain higher noise) noise_params_2d 20, 16, (500, 500, 500), 85039, 5, 0.6, 2.0, eased

#    Varies steepness of cliffs.
mgv6_np_steepness (Steepness noise) noise_params_2d 0.85, 0.5, (125, 125, 125), -932, 5, 0.7, 2.0, eased

#    Defines distribution of higher terrain.
mgv6_np_height_select (Height select noise) noise_params_2d 0.5, 1, (250, 250, 250), 4213, 5, 0.69, 2.0, eased

#    Varies depth of biome surface nodes.
mgv6_np_mud (Mud noise) noise_params_2d 4, 2, (200, 200, 200), 91013, 3, 0.55, 2.0, eased

#    Defines areas with sandy beaches.
mgv6_np_beach (Beach noise) noise_params_2d 0, 1, (250, 250, 250), 59420, 3, 0.50, 2.0, eased

#    Temperature variation for biomes.
mgv6_np_biome (Biome noise) noise_params_2d 0, 1, (500, 500, 500), 9130, 3, 0.50, 2.0, eased

#    Variation of number of caves.
mgv6_np_cave (Cave noise) noise_params_2d 6, 6, (250, 250, 250), 34329, 3, 0.50, 2.0, eased

#    Humidity variation for biomes.
mgv6_np_humidity (Humidity noise) noise_params_2d 0.5, 0.5, (500, 500, 500), 72384, 3, 0.50, 2.0, eased

#    Defines tree areas and tree density.
mgv6_np_trees (Trees noise) noise_params_2d 0, 1, (125, 125, 125), 2, 4, 0.66, 2.0, eased

#    Defines areas where trees have apples.
mgv6_np_apple_trees (Apple trees noise) noise_params_2d 0, 1, (100, 100, 100), 342902, 3, 0.45, 2.0, eased

[*Mapgen V7]

#    Map generation attributes specific to Mapgen v7.
#    'ridges': Rivers.
#    'floatlands': Floating land masses in the atmosphere.
#    'caverns': Giant caves deep underground.
mgv7_spflags (Mapgen V7 specific flags) flags mountains,ridges,nofloatlands,caverns mountains,ridges,floatlands,caverns,nomountains,noridges,nofloatlands,nocaverns

#    Y of mountain density gradient zero level. Used to shift mountains vertically.
mgv7_mount_zero_level (Mountain zero level) int 0 -31000 31000

#    Lower Y limit of floatlands.
mgv7_floatland_ymin (Floatland minimum Y) int 1024 -31000 31000

#    Upper Y limit of floatlands.
mgv7_floatland_ymax (Floatland maximum Y) int 4096 -31000 31000

#    Y-distance over which floatlands taper from full density to nothing.
#    Tapering starts at this distance from the Y limit.
#    For a solid floatland layer, this controls the height of hills/mountains.
#    Must be less than or equal to half the distance between the Y limits.
mgv7_floatland_taper (Floatland tapering distance) int 256 0 32767

#    Exponent of the floatland tapering. Alters the tapering behavior.
#    Value = 1.0 creates a uniform, linear tapering.
#    Values > 1.0 create a smooth tapering suitable for the default separated
#    floatlands.
#    Values < 1.0 (for example 0.25) create a more defined surface level with
#    flatter lowlands, suitable for a solid floatland layer.
mgv7_float_taper_exp (Floatland taper exponent) float 2.0

#    Adjusts the density of the floatland layer.
#    Increase value to increase density. Can be positive or negative.
#    Value = 0.0: 50% of volume is floatland.
#    Value = 2.0 (can be higher depending on 'mgv7_np_floatland', always test
#    to be sure) creates a solid floatland layer.
mgv7_floatland_density (Floatland density) float -0.6

#    Surface level of optional water placed on a solid floatland layer.
#    Water is disabled by default and will only be placed if this value is set
#    to above 'mgv7_floatland_ymax' - 'mgv7_floatland_taper' (the start of the
#    upper tapering).
#    ***WARNING, POTENTIAL DANGER TO WORLDS AND SERVER PERFORMANCE***:
#    When enabling water placement the floatlands must be configured and tested
#    to be a solid layer by setting 'mgv7_floatland_density' to 2.0 (or other
#    required value depending on 'mgv7_np_floatland'), to avoid
#    server-intensive extreme water flow and to avoid vast flooding of the
#    world surface below.
mgv7_floatland_ywater (Floatland water level) int -31000 -31000 31000

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
mgv7_cave_width (Cave width) float 0.09

#    Y of upper limit of large caves.
mgv7_large_cave_depth (Large cave depth) int -33 -31000 31000

#    Minimum limit of random number of small caves per mapchunk.
mgv7_small_cave_num_min (Small cave minimum number) int 0 0 256

#    Maximum limit of random number of small caves per mapchunk.
mgv7_small_cave_num_max (Small cave maximum number) int 0 0 256

#    Minimum limit of random number of large caves per mapchunk.
mgv7_large_cave_num_min (Large cave minimum number) int 0 0 64

#    Maximum limit of random number of large caves per mapchunk.
mgv7_large_cave_num_max (Large cave maximum number) int 2 0 64

#    Proportion of large caves that contain liquid.
mgv7_large_cave_flooded (Large cave proportion flooded) float 0.5 0.0 1.0

#    Y-level of cavern upper limit.
mgv7_cavern_limit (Cavern limit) int -256 -31000 31000

#    Y-distance over which caverns expand to full size.
mgv7_cavern_taper (Cavern taper) int 256 0 32767

#    Defines full size of caverns, smaller values create larger caverns.
mgv7_cavern_threshold (Cavern threshold) float 0.7

#    Lower Y limit of dungeons.
mgv7_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgv7_dungeon_ymax (Dungeon maximum Y) int 31000 -31000 31000

[**Noises]

#    Y-level of higher terrain that creates cliffs.
mgv7_np_terrain_base (Terrain base noise) noise_params_2d 4, 70, (600, 600, 600), 82341, 5, 0.6, 2.0, eased

#    Y-level of lower terrain and seabed.
mgv7_np_terrain_alt (Terrain alternative noise) noise_params_2d 4, 25, (600, 600, 600), 5934, 5, 0.6, 2.0, eased

#    Varies roughness of terrain.
#    Defines the 'persistence' value for terrain_base and terrain_alt noises.
mgv7_np_terrain_persist (Terrain persistence noise) noise_params_2d 0.6, 0.1, (2000, 2000, 2000), 539, 3, 0.6, 2.0, eased

#    Defines distribution of higher terrain and steepness of cliffs.
mgv7_np_height_select (Height select noise) noise_params_2d -8, 16, (500, 500, 500), 4213, 6, 0.7, 2.0, eased

#    Variation of biome filler depth.
mgv7_np_filler_depth (Filler depth noise) noise_params_2d 0, 1.2, (150, 150, 150), 261, 3, 0.7, 2.0, eased

#    Variation of maximum mountain height (in nodes).
mgv7_np_mount_height (Mountain height noise) noise_params_2d 256, 112, (1000, 1000, 1000), 72449, 3, 0.6, 2.0, eased

#    Defines large-scale river channel structure.
mgv7_np_ridge_uwater (Ridge underwater noise) noise_params_2d 0, 1, (1000, 1000, 1000), 85039, 5, 0.6, 2.0, eased

#    3D noise defining mountain structure and height.
#    Also defines structure of floatland mountain terrain.
mgv7_np_mountain (Mountain noise) noise_params_3d -0.6, 1, (250, 350, 250), 5333, 5, 0.63, 2.0

#    3D noise defining structure of river canyon walls.
mgv7_np_ridge (Ridge noise) noise_params_3d 0, 1, (100, 100, 100), 6467, 4, 0.75, 2.0

#    3D noise defining structure of floatlands.
#    If altered from the default, the noise 'scale' (0.7 by default) may need
#    to be adjusted, as floatland tapering functions best when this noise has
#    a value range of approximately -2.0 to 2.0.
mgv7_np_floatland (Floatland noise) noise_params_3d 0, 0.7, (384, 96, 384), 1009, 4, 0.75, 1.618

#    3D noise defining giant caverns.
mgv7_np_cavern (Cavern noise) noise_params_3d 0, 1, (384, 128, 384), 723, 5, 0.63, 2.0

#    First of two 3D noises that together define tunnels.
mgv7_np_cave1 (Cave1 noise) noise_params_3d 0, 12, (61, 61, 61), 52534, 3, 0.5, 2.0

#    Second of two 3D noises that together define tunnels.
mgv7_np_cave2 (Cave2 noise) noise_params_3d 0, 12, (67, 67, 67), 10325, 3, 0.5, 2.0

#    3D noise that determines number of dungeons per mapchunk.
mgv7_np_dungeons (Dungeon noise) noise_params_3d 0.9, 0.5, (500, 500, 500), 0, 2, 0.8, 2.0

[*Mapgen Carpathian]

#    Map generation attributes specific to Mapgen Carpathian.
mgcarpathian_spflags (Mapgen Carpathian specific flags) flags caverns,norivers caverns,rivers,nocaverns,norivers

#    Defines the base ground level.
mgcarpathian_base_level (Base ground level) float 12.0

#    Defines the width of the river channel.
mgcarpathian_river_width (River channel width) float 0.05

#    Defines the depth of the river channel.
mgcarpathian_river_depth (River channel depth) float 24.0

#    Defines the width of the river valley.
mgcarpathian_valley_width (River valley width) float 0.25

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
mgcarpathian_cave_width (Cave width) float 0.09

#    Y of upper limit of large caves.
mgcarpathian_large_cave_depth (Large cave depth) int -33 -31000 31000

#    Minimum limit of random number of small caves per mapchunk.
mgcarpathian_small_cave_num_min (Small cave minimum number) int 0 0 256

#    Maximum limit of random number of small caves per mapchunk.
mgcarpathian_small_cave_num_max (Small cave maximum number) int 0 0 256

#    Minimum limit of random number of large caves per mapchunk.
mgcarpathian_large_cave_num_min (Large cave minimum number) int 0 0 64

#    Maximum limit of random number of large caves per mapchunk.
mgcarpathian_large_cave_num_max (Large cave maximum number) int 2 0 64

#    Proportion of large caves that contain liquid.
mgcarpathian_large_cave_flooded (Large cave proportion flooded) float 0.5 0.0 1.0

#    Y-level of cavern upper limit.
mgcarpathian_cavern_limit (Cavern limit) int -256 -31000 31000

#    Y-distance over which caverns expand to full size.
mgcarpathian_cavern_taper (Cavern taper) int 256 0 32767

#    Defines full size of caverns, smaller values create larger caverns.
mgcarpathian_cavern_threshold (Cavern threshold) float 0.7

#    Lower Y limit of dungeons.
mgcarpathian_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgcarpathian_dungeon_ymax (Dungeon maximum Y) int 31000 -31000 31000

[**Noises]

#    Variation of biome filler depth.
mgcarpathian_np_filler_depth (Filler depth noise) noise_params_2d 0, 1, (128, 128, 128), 261, 3, 0.7, 2.0, eased

#    First of 4 2D noises that together define hill/mountain range height.
mgcarpathian_np_height1 (Hilliness1 noise) noise_params_2d 0, 5, (251, 251, 251), 9613, 5, 0.5, 2.0, eased

#    Second of 4 2D noises that together define hill/mountain range height.
mgcarpathian_np_height2 (Hilliness2 noise) noise_params_2d 0, 5, (383, 383, 383), 1949, 5, 0.5, 2.0, eased

#    Third of 4 2D noises that together define hill/mountain range height.
mgcarpathian_np_height3 (Hilliness3 noise) noise_params_2d 0, 5, (509, 509, 509), 3211, 5, 0.5, 2.0, eased

#    Fourth of 4 2D noises that together define hill/mountain range height.
mgcarpathian_np_height4 (Hilliness4 noise) noise_params_2d 0, 5, (631, 631, 631), 1583, 5, 0.5, 2.0, eased

#    2D noise that controls the size/occurrence of rolling hills.
mgcarpathian_np_hills_terrain (Rolling hills spread noise) noise_params_2d 1, 1, (1301, 1301, 1301), 1692, 3, 0.5, 2.0, eased

#    2D noise that controls the size/occurrence of ridged mountain ranges.
mgcarpathian_np_ridge_terrain (Ridge mountain spread noise) noise_params_2d 1, 1, (1889, 1889, 1889), 3568, 3, 0.5, 2.0, eased

#    2D noise that controls the size/occurrence of step mountain ranges.
mgcarpathian_np_step_terrain (Step mountain spread noise) noise_params_2d 1, 1, (1889, 1889, 1889), 4157, 3, 0.5, 2.0, eased

#    2D noise that controls the shape/size of rolling hills.
mgcarpathian_np_hills (Rolling hill size noise) noise_params_2d 0, 3, (257, 257, 257), 6604, 6, 0.5, 2.0, eased

#    2D noise that controls the shape/size of ridged mountains.
mgcarpathian_np_ridge_mnt (Ridged mountain size noise) noise_params_2d 0, 12, (743, 743, 743), 5520, 6, 0.7, 2.0, eased

#    2D noise that controls the shape/size of step mountains.
mgcarpathian_np_step_mnt (Step mountain size noise) noise_params_2d 0, 8, (509, 509, 509), 2590, 6, 0.6, 2.0, eased

#    2D noise that locates the river valleys and channels.
mgcarpathian_np_rivers (River noise) noise_params_2d 0, 1, (1000, 1000, 1000), 85039, 5, 0.6, 2.0, eased

#    3D noise for mountain overhangs, cliffs, etc. Usually small variations.
mgcarpathian_np_mnt_var (Mountain variation noise) noise_params_3d 0, 1, (499, 499, 499), 2490, 5, 0.55, 2.0

#    First of two 3D noises that together define tunnels.
mgcarpathian_np_cave1 (Cave1 noise) noise_params_3d 0, 12, (61, 61, 61), 52534, 3, 0.5, 2.0

#    Second of two 3D noises that together define tunnels.
mgcarpathian_np_cave2 (Cave2 noise) noise_params_3d 0, 12, (67, 67, 67), 10325, 3, 0.5, 2.0

#    3D noise defining giant caverns.
mgcarpathian_np_cavern (Cavern noise) noise_params_3d 0, 1, (384, 128, 384), 723, 5, 0.63, 2.0

#    3D noise that determines number of dungeons per mapchunk.
mgcarpathian_np_dungeons (Dungeon noise) noise_params_3d 0.9, 0.5, (500, 500, 500), 0, 2, 0.8, 2.0

[*Mapgen Flat]

#    Map generation attributes specific to Mapgen Flat.
#    Occasional lakes and hills can be added to the flat world.
mgflat_spflags (Mapgen Flat specific flags) flags nolakes,nohills,nocaverns lakes,hills,caverns,nolakes,nohills,nocaverns

#    Y of flat ground.
mgflat_ground_level (Ground level) int 8 -31000 31000

#    Y of upper limit of large caves.
mgflat_large_cave_depth (Large cave depth) int -33 -31000 31000

#    Minimum limit of random number of small caves per mapchunk.
mgflat_small_cave_num_min (Small cave minimum number) int 0 0 256

#    Maximum limit of random number of small caves per mapchunk.
mgflat_small_cave_num_max (Small cave maximum number) int 0 0 256

#    Minimum limit of random number of large caves per mapchunk.
mgflat_large_cave_num_min (Large cave minimum number) int 0 0 64

#    Maximum limit of random number of large caves per mapchunk.
mgflat_large_cave_num_max (Large cave maximum number) int 2 0 64

#    Proportion of large caves that contain liquid.
mgflat_large_cave_flooded (Large cave proportion flooded) float 0.5 0.0 1.0

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
mgflat_cave_width (Cave width) float 0.09

#    Terrain noise threshold for lakes.
#    Controls proportion of world area covered by lakes.
#    Adjust towards 0.0 for a larger proportion.
mgflat_lake_threshold (Lake threshold) float -0.45

#    Controls steepness/depth of lake depressions.
mgflat_lake_steepness (Lake steepness) float 48.0

#    Terrain noise threshold for hills.
#    Controls proportion of world area covered by hills.
#    Adjust towards 0.0 for a larger proportion.
mgflat_hill_threshold (Hill threshold) float 0.45

#    Controls steepness/height of hills.
mgflat_hill_steepness (Hill steepness) float 64.0

#    Y-level of cavern upper limit.
mgflat_cavern_limit (Cavern limit) int -256 -31000 31000

#    Y-distance over which caverns expand to full size.
mgflat_cavern_taper (Cavern taper) int 256 0 32767

#    Defines full size of caverns, smaller values create larger caverns.
mgflat_cavern_threshold (Cavern threshold) float 0.7

#    Lower Y limit of dungeons.
mgflat_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgflat_dungeon_ymax (Dungeon maximum Y) int 31000 -31000 31000

[**Noises]

#    Defines location and terrain of optional hills and lakes.
mgflat_np_terrain (Terrain noise) noise_params_2d 0, 1, (600, 600, 600), 7244, 5, 0.6, 2.0, eased

#    Variation of biome filler depth.
mgflat_np_filler_depth (Filler depth noise) noise_params_2d 0, 1.2, (150, 150, 150), 261, 3, 0.7, 2.0, eased

#    First of two 3D noises that together define tunnels.
mgflat_np_cave1 (Cave1 noise) noise_params_3d 0, 12, (61, 61, 61), 52534, 3, 0.5, 2.0

#    Second of two 3D noises that together define tunnels.
mgflat_np_cave2 (Cave2 noise) noise_params_3d 0, 12, (67, 67, 67), 10325, 3, 0.5, 2.0

#    3D noise defining giant caverns.
mgflat_np_cavern (Cavern noise) noise_params_3d 0, 1, (384, 128, 384), 723, 5, 0.63, 2.0

#    3D noise that determines number of dungeons per mapchunk.
mgflat_np_dungeons (Dungeon noise) noise_params_3d 0.9, 0.5, (500, 500, 500), 0, 2, 0.8, 2.0

[*Mapgen Fractal]

#    Map generation attributes specific to Mapgen Fractal.
#    'terrain' enables the generation of non-fractal terrain:
#    ocean, islands and underground.
mgfractal_spflags (Mapgen Fractal specific flags) flags terrain terrain,noterrain

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
mgfractal_cave_width (Cave width) float 0.09

#    Y of upper limit of large caves.
mgfractal_large_cave_depth (Large cave depth) int -33 -31000 31000

#    Minimum limit of random number of small caves per mapchunk.
mgfractal_small_cave_num_min (Small cave minimum number) int 0 0 256

#    Maximum limit of random number of small caves per mapchunk.
mgfractal_small_cave_num_max (Small cave maximum number) int 0 0 256

#    Minimum limit of random number of large caves per mapchunk.
mgfractal_large_cave_num_min (Large cave minimum number) int 0 0 64

#    Maximum limit of random number of large caves per mapchunk.
mgfractal_large_cave_num_max (Large cave maximum number) int 2 0 64

#    Proportion of large caves that contain liquid.
mgfractal_large_cave_flooded (Large cave proportion flooded) float 0.5 0.0 1.0

#    Lower Y limit of dungeons.
mgfractal_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgfractal_dungeon_ymax (Dungeon maximum Y) int 31000 -31000 31000

#    Selects one of 18 fractal types.
#    1 = 4D "Roundy" Mandelbrot set.
#    2 = 4D "Roundy" Julia set.
#    3 = 4D "Squarry" Mandelbrot set.
#    4 = 4D "Squarry" Julia set.
#    5 = 4D "Mandy Cousin" Mandelbrot set.
#    6 = 4D "Mandy Cousin" Julia set.
#    7 = 4D "Variation" Mandelbrot set.
#    8 = 4D "Variation" Julia set.
#    9 = 3D "Mandelbrot/Mandelbar" Mandelbrot set.
#    10 = 3D "Mandelbrot/Mandelbar" Julia set.
#    11 = 3D "Christmas Tree" Mandelbrot set.
#    12 = 3D "Christmas Tree" Julia set.
#    13 = 3D "Mandelbulb" Mandelbrot set.
#    14 = 3D "Mandelbulb" Julia set.
#    15 = 3D "Cosine Mandelbulb" Mandelbrot set.
#    16 = 3D "Cosine Mandelbulb" Julia set.
#    17 = 4D "Mandelbulb" Mandelbrot set.
#    18 = 4D "Mandelbulb" Julia set.
mgfractal_fractal (Fractal type) int 1 1 18

#    Iterations of the recursive function.
#    Increasing this increases the amount of fine detail, but also
#    increases processing load.
#    At iterations = 20 this mapgen has a similar load to mapgen V7.
mgfractal_iterations (Iterations) int 11 1 65535

#    (X,Y,Z) scale of fractal in nodes.
#    Actual fractal size will be 2 to 3 times larger.
#    These numbers can be made very large, the fractal does
#    not have to fit inside the world.
#    Increase these to 'zoom' into the detail of the fractal.
#    Default is for a vertically-squashed shape suitable for
#    an island, set all 3 numbers equal for the raw shape.
mgfractal_scale (Scale) v3f (4096.0, 1024.0, 4096.0)

#    (X,Y,Z) offset of fractal from world center in units of 'scale'.
#    Can be used to move a desired point to (0, 0) to create a
#    suitable spawn point, or to allow 'zooming in' on a desired
#    point by increasing 'scale'.
#    The default is tuned for a suitable spawn point for Mandelbrot
#    sets with default parameters, it may need altering in other
#    situations.
#    Range roughly -2 to 2. Multiply by 'scale' for offset in nodes.
mgfractal_offset (Offset) v3f (1.79, 0.0, 0.0)

#    W coordinate of the generated 3D slice of a 4D fractal.
#    Determines which 3D slice of the 4D shape is generated.
#    Alters the shape of the fractal.
#    Has no effect on 3D fractals.
#    Range roughly -2 to 2.
mgfractal_slice_w (Slice w) float 0.0

#    Julia set only.
#    X component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Range roughly -2 to 2.
mgfractal_julia_x (Julia x) float 0.33

#    Julia set only.
#    Y component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Range roughly -2 to 2.
mgfractal_julia_y (Julia y) float 0.33

#    Julia set only.
#    Z component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Range roughly -2 to 2.
mgfractal_julia_z (Julia z) float 0.33

#    Julia set only.
#    W component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Has no effect on 3D fractals.
#    Range roughly -2 to 2.
mgfractal_julia_w (Julia w) float 0.33

[**Noises]

#    Y-level of seabed.
mgfractal_np_seabed (Seabed noise) noise_params_2d -14, 9, (600, 600, 600), 41900, 5, 0.6, 2.0, eased

#    Variation of biome filler depth.
mgfractal_np_filler_depth (Filler depth noise) noise_params_2d 0, 1.2, (150, 150, 150), 261, 3, 0.7, 2.0, eased

#    First of two 3D noises that together define tunnels.
mgfractal_np_cave1 (Cave1 noise) noise_params_3d 0, 12, (61, 61, 61), 52534, 3, 0.5, 2.0

#    Second of two 3D noises that together define tunnels.
mgfractal_np_cave2 (Cave2 noise) noise_params_3d 0, 12, (67, 67, 67), 10325, 3, 0.5, 2.0

#    3D noise that determines number of dungeons per mapchunk.
mgfractal_np_dungeons (Dungeon noise) noise_params_3d 0.9, 0.5, (500, 500, 500), 0, 2, 0.8, 2.0

[*Mapgen Valleys]

#    Map generation attributes specific to Mapgen Valleys.
#    'altitude_chill': Reduces heat with altitude.
#    'humid_rivers': Increases humidity around rivers.
#    'vary_river_depth': If enabled, low humidity and high heat causes rivers
#    to become shallower and occasionally dry.
#    'altitude_dry': Reduces humidity with altitude.
mgvalleys_spflags (Mapgen Valleys specific flags) flags altitude_chill,humid_rivers,vary_river_depth,altitude_dry altitude_chill,humid_rivers,vary_river_depth,altitude_dry,noaltitude_chill,nohumid_rivers,novary_river_depth,noaltitude_dry

#    The vertical distance over which heat drops by 20 if 'altitude_chill' is
#    enabled. Also the vertical distance over which humidity drops by 10 if
#    'altitude_dry' is enabled.
mgvalleys_altitude_chill (Altitude chill) int 90 0 65535

#    Depth below which you'll find large caves.
mgvalleys_large_cave_depth (Large cave depth) int -33 -31000 31000

#    Minimum limit of random number of small caves per mapchunk.
mgvalleys_small_cave_num_min (Small cave minimum number) int 0 0 256

#    Maximum limit of random number of small caves per mapchunk.
mgvalleys_small_cave_num_max (Small cave maximum number) int 0 0 256

#    Minimum limit of random number of large caves per mapchunk.
mgvalleys_large_cave_num_min (Large cave minimum number) int 0 0 64

#    Maximum limit of random number of large caves per mapchunk.
mgvalleys_large_cave_num_max (Large cave maximum number) int 2 0 64

#    Proportion of large caves that contain liquid.
mgvalleys_large_cave_flooded (Large cave proportion flooded) float 0.5 0.0 1.0

#    Depth below which you'll find giant caverns.
mgvalleys_cavern_limit (Cavern upper limit) int -256 -31000 31000

#    Y-distance over which caverns expand to full size.
mgvalleys_cavern_taper (Cavern taper) int 192 0 32767

#    Defines full size of caverns, smaller values create larger caverns.
mgvalleys_cavern_threshold (Cavern threshold) float 0.6

#    How deep to make rivers.
mgvalleys_river_depth (River depth) int 4 0 65535

#    How wide to make rivers.
mgvalleys_river_size (River size) int 5 0 65535

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
mgvalleys_cave_width (Cave width) float 0.09

#    Lower Y limit of dungeons.
mgvalleys_dungeon_ymin (Dungeon minimum Y) int -31000 -31000 31000

#    Upper Y limit of dungeons.
mgvalleys_dungeon_ymax (Dungeon maximum Y) int 63 -31000 31000

[**Noises]

#    First of two 3D noises that together define tunnels.
mgvalleys_np_cave1 (Cave noise #1) noise_params_3d 0, 12, (61, 61, 61), 52534, 3, 0.5, 2.0

#    Second of two 3D noises that together define tunnels.
mgvalleys_np_cave2 (Cave noise #2) noise_params_3d 0, 12, (67, 67, 67), 10325, 3, 0.5, 2.0

#    The depth of dirt or other biome filler node.
mgvalleys_np_filler_depth (Filler depth) noise_params_2d 0, 1.2, (256, 256, 256), 1605, 3, 0.5, 2.0, eased

#    3D noise defining giant caverns.
mgvalleys_np_cavern (Cavern noise) noise_params_3d 0, 1, (768, 256, 768), 59033, 6, 0.63, 2.0

#    Defines large-scale river channel structure.
mgvalleys_np_rivers (River noise) noise_params_2d 0, 1, (256, 256, 256), -6050, 5, 0.6, 2.0, eased

#    Base terrain height.
mgvalleys_np_terrain_height (Terrain height) noise_params_2d -10, 50, (1024, 1024, 1024), 5202, 6, 0.4, 2.0, eased

#    Raises terrain to make valleys around the rivers.
mgvalleys_np_valley_depth (Valley depth) noise_params_2d 5, 4, (512, 512, 512), -1914, 1, 1.0, 2.0, eased

#    Slope and fill work together to modify the heights.
mgvalleys_np_inter_valley_fill (Valley fill) noise_params_3d 0, 1, (256, 512, 256), 1993, 6, 0.8, 2.0

#    Amplifies the valleys.
mgvalleys_np_valley_profile (Valley profile) noise_params_2d 0.6, 0.5, (512, 512, 512), 777, 1, 1.0, 2.0, eased

#    Slope and fill work together to modify the heights.
mgvalleys_np_inter_valley_slope (Valley slope) noise_params_2d 0.5, 0.5, (128, 128, 128), 746, 1, 1.0, 2.0, eased

#    3D noise that determines number of dungeons per mapchunk.
mgvalleys_np_dungeons (Dungeon noise) noise_params_3d 0.9, 0.5, (500, 500, 500), 0, 2, 0.8, 2.0


[Advanced]

[*Developer Options]

#    Enable Lua modding support on client.
#    This support is experimental and API can change.
enable_client_modding (Client modding) bool false

#    Replaces the default main menu with a custom one.
main_menu_script (Main menu script) string

[**Mod Security]

#    Prevent mods from doing insecure things like running shell commands.
secure.enable_security (Enable mod security) bool true

#    Comma-separated list of trusted mods that are allowed to access insecure
#    functions even when mod security is on (via request_insecure_environment()).
secure.trusted_mods (Trusted mods) string

#    Comma-separated list of mods that are allowed to access HTTP APIs, which
#    allow them to upload and download data to/from the internet.
secure.http_mods (HTTP mods) string

[**Debugging]

#    Level of logging to be written to debug.txt:
#    -    <nothing> (no logging)
#    -    none (messages with no level)
#    -    error
#    -    warning
#    -    action
#    -    info
#    -    verbose
#    -    trace
debug_log_level (Debug log level) enum action ,none,error,warning,action,info,verbose,trace

#    If the file size of debug.txt exceeds the number of megabytes specified in
#    this setting when it is opened, the file is moved to debug.txt.1,
#    deleting an older debug.txt.1 if it exists.
#    debug.txt is only moved if this setting is positive.
debug_log_size_max (Debug log file size threshold) int 50 1

#    Minimal level of logging to be written to chat.
chat_log_level (Chat log level) enum error ,none,error,warning,action,info,verbose,trace

#    Handling for deprecated Lua API calls:
#    -    none: Do not log deprecated calls
#    -    log: mimic and log backtrace of deprecated call (default).
#    -    error: abort on usage of deprecated call (suggested for mod developers).
deprecated_lua_api_handling (Deprecated Lua API handling) enum log none,log,error

#    Enable random user input (only used for testing).
random_input (Random input) bool false

#    Enable mod channels support.
enable_mod_channels (Mod channels) bool false

[**Mod Profiler]

#    Load the game profiler to collect game profiling data.
#    Provides a /profiler command to access the compiled profile.
#    Useful for mod developers and server operators.
profiler.load (Load the game profiler) bool false

#    The default format in which profiles are being saved,
#    when calling `/profiler save [format]` without format.
profiler.default_report_format (Default report format) enum txt txt,csv,lua,json,json_pretty

#    The file path relative to your worldpath in which profiles will be saved to.
profiler.report_path (Report path) string ""

#    Instrument the methods of entities on registration.
instrument.entity (Entity methods) bool true

#    Instrument the action function of Active Block Modifiers on registration.
instrument.abm (Active Block Modifiers) bool true

#    Instrument the action function of Loading Block Modifiers on registration.
instrument.lbm (Loading Block Modifiers) bool true

#    Instrument chat commands on registration.
instrument.chatcommand (Chat commands) bool true

#    Instrument global callback functions on registration.
#    (anything you pass to a minetest.register_*() function)
instrument.global_callback (Global callbacks) bool true

#    Instrument builtin.
#    This is usually only needed by core/builtin contributors
instrument.builtin (Builtin) bool false

#    Have the profiler instrument itself:
#     * Instrument an empty function.
#       This estimates the overhead, that instrumentation is adding (+1 function call).
#     * Instrument the sampler being used to update the statistics.
instrument.profiler (Profiler) bool false

[**Engine profiler]

#    Print the engine's profiling data in regular intervals (in seconds).
#    0 = disable. Useful for developers.
profiler_print_interval (Engine profiling data print interval) int 0 0


[*Advanced]

#    Enable IPv6 support (for both client and server).
#    Required for IPv6 connections to work at all.
enable_ipv6 (IPv6) bool true

#    If enabled, invalid world data won't cause the server to shut down.
#    Only enable this if you know what you are doing.
ignore_world_load_errors (Ignore world errors) bool false